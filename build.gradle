plugins {
    id 'net.researchgate.release' version '2.7.0'
    id 'maven-publish'
    id 'maven'
    id 'java'
}

group 'com.vevo.upsilon'

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "http://nexus.vevodev.com/content/repositories/releases/"
        }
        jcenter()
    }

    build {
        dependsOn publishToMavenLocal
    }

    test {
        useTestNG()
    }

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.22'

        testCompile 'org.testng:testng:6.10'
        testCompile 'org.mockito:mockito-core:2.5.4'
        testCompile 'org.slf4j:slf4j-simple:1.7.22'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        classifier "sources"
    }
}

release {
    failOnCommitNeeded = false
    failOnUnversionedFiles = false
}

afterReleaseBuild.dependsOn uploadArchives

//artifacts {
//    archives file: file('core/build/libs/core-0.1-SNAPSHOT.jar'), name: 'core', type: 'jar'
//    archives file: file('ext/s3/build/libs/s3-0.1-SNAPSHOT.jar'), name: 's3', type: 'jar'
//}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            from components.java
//        }
//    }
//}

publishing {
    publications {
        root(MavenPublication) {
            from components.java
        }

        core(MavenPublication) {
            artifactId 'core'
            groupId 'com.vevo.upsilon'
            version project.version
            artifact 'core/build/libs/core-' + project.version + '.jar'
        }

        s3(MavenPublication) {
            artifactId 's3'
            groupId 'com.vevo.upsilon.ext'
            version project.version
            artifact 'ext/s3/build/libs/s3-' + project.version + '.jar'
        }
    }
    repositories {
        maven {
            url "http://nexus.vevodev.com/content/repositories/releases/"
        }
    }
}

// All of this can maybe go away if https://issues.gradle.org/browse/GRADLE-2365 gets solved
def getCreds = { id ->
    def username = System.getenv("NEXUS_USER")
    def password = System.getenv("NEXUS_PASSWORD")

    if (!(username && password && username.trim() && password.trim())) {
        File mavenSettings = new File("${System.properties['user.home']}/.m2/settings.xml")
        if (mavenSettings.exists()) {
            def xmlSlurper = new XmlSlurper()
            def settings = xmlSlurper.parse(mavenSettings)
            username = settings.servers.children().find { it.id == id }.username
            password = settings.servers.children().find { it.id == id }.password
        }
    }

    [username: username, password: password]
}

def releaseCreds = getCreds('releases')
def snapshotsCreds = getCreds('snapshots')

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "http://nexus.vevodev.com/content/repositories/releases") {
            authentication(userName: "${releaseCreds.username}", password: "${releaseCreds.password}")
        }
        snapshotRepository(url: "http://nexus.vevodev.com/content/repositories/snapshots") {
            authentication(userName: "${snapshotsCreds.username}", password: "${snapshotsCreds.password}")
        }

//        addFilter('core') {artifact, file ->
//            artifact.name == 'core'
//        }
//        addFilter('s3') {artifact, file ->
//            artifact.name == 's3'
//            artifact.group == 'com.vevo.upsilon.ext'
//        }
    }
}
